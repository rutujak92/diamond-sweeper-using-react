{"ast":null,"code":"var _jsxFileName = \"/Users/rutuja/Sites/minesweeper/src/Game/Board.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardData: this.initBoardData(this.props.dimension, this.props.mines),\n      gameStatus: false,\n      mineCount: this.props.mines\n    };\n  }\n\n  createEmptyBoard(dimension) {\n    let data = [];\n\n    for (let i = 0; i < dimension.length; i++) {\n      data.push([]);\n\n      for (let j = 0; j < dimension.length; j++) {\n        data[i][j] = {\n          x: i,\n          y: j,\n          isMine: false,\n          neighbour: 0,\n          isRevealed: false,\n          isEmpty: false,\n          isFlagged: false\n        };\n      }\n    }\n\n    return data;\n  }\n\n  initBoardData(dimension, mines) {\n    this.createEmptyBoard(dimension); // this.plantMines()\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"mines: \", this.state.mineCount), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.gameStatus)));\n  }\n\n}\nBoard.propTypes = {\n  dimension: PropTypes.number,\n  mines: PropTypes.number\n};","map":{"version":3,"sources":["/Users/rutuja/Sites/minesweeper/src/Game/Board.js"],"names":["React","PropTypes","Board","Component","constructor","props","state","boardData","initBoardData","dimension","mines","gameStatus","mineCount","createEmptyBoard","data","i","length","push","j","x","y","isMine","neighbour","isRevealed","isEmpty","isFlagged","render","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,SAAS,EAAE,KAAKC,aAAL,CAAmB,KAAKH,KAAL,CAAWI,SAA9B,EAAwC,KAAKJ,KAAL,CAAWK,KAAnD,CADE;AAEbC,MAAAA,UAAU,EAAC,KAFE;AAGbC,MAAAA,SAAS,EAAC,KAAKP,KAAL,CAAWK;AAHR,KAAb;AAKH;;AAELG,EAAAA,gBAAgB,CAACJ,SAAD,EAAY;AACxB,QAAIK,IAAI,GAAG,EAAX;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,SAAS,CAACO,MAAxB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/BD,MAAAA,IAAI,CAACG,IAAL,CAAU,EAAV;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACT,SAAS,CAACO,MAAxB,EAA+BE,CAAC,EAAhC,EAAmC;AAC/BJ,QAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQG,CAAR,IAAa;AACTC,UAAAA,CAAC,EAAEJ,CADM;AAETK,UAAAA,CAAC,EAAEF,CAFM;AAGTG,UAAAA,MAAM,EAAE,KAHC;AAITC,UAAAA,SAAS,EAAE,CAJF;AAKTC,UAAAA,UAAU,EAAE,KALH;AAMTC,UAAAA,OAAO,EAAE,KANA;AAOTC,UAAAA,SAAS,EAAE;AAPF,SAAb;AAUC;AACJ;;AACD,WAAOX,IAAP;AAGP;;AACDN,EAAAA,aAAa,CAACC,SAAD,EAAWC,KAAX,EAAiB;AAC1B,SAAKG,gBAAL,CAAsBJ,SAAtB,EAD0B,CAE1B;AACH;;AACDiB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACU,KAAKpB,KAAL,CAAWM,SADrB,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWK,UADd,CALF,CADM,CADJ;AAcH;;AAnD6C;AAsDlDT,KAAK,CAACyB,SAAN,GAAkB;AACdlB,EAAAA,SAAS,EAAER,SAAS,CAAC2B,MADP;AAEdlB,EAAAA,KAAK,EAAET,SAAS,CAAC2B;AAFH,CAAlB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Board extends React.Component{\n   \n        constructor(props){\n            super(props)\n            this.state = {\n            boardData: this.initBoardData(this.props.dimension,this.props.mines),\n            gameStatus:false,\n            mineCount:this.props.mines\n            }\n        }\n    \n    createEmptyBoard(dimension) {\n        let data = []\n        for(let i=0;i<dimension.length;i++){\n            data.push([])\n            for(let j=0;j<dimension.length;j++){\n                data[i][j] = {\n                    x: i,\n                    y: j,\n                    isMine: false,\n                    neighbour: 0,\n                    isRevealed: false,\n                    isEmpty: false,\n                    isFlagged: false,\n                    };\n              \n                }\n            }\n            return data;\n        \n\n    }\n    initBoardData(dimension,mines){\n        this.createEmptyBoard(dimension)\n        // this.plantMines()\n    }\n    render(){\n        return(\n            <div className=\"board\">\n      <div className=\"game-info\">\n        <span className=\"info\">\n          mines: {this.state.mineCount}\n        </span>\n        <br />\n        <span className=\"info\">\n          {this.state.gameStatus}\n        </span>\n      </div>\n   \n    </div>\n    );\n    }\n    \n}\nBoard.propTypes = {\n    dimension: PropTypes.number,\n    mines: PropTypes.number,\n  }\n\n"]},"metadata":{},"sourceType":"module"}